filter(sam_uptow7 == 1)
# Imputación
no.imp = dataset_relig_tol
imp <- mice(no.imp, method = "norm.nob", m = 5) # Impute data
lista_datasets = list()
length(lista_datasets) = 5
lista_datasets[[1]] = complete(imp,1)
lista_datasets[[2]] = complete(imp,2)
lista_datasets[[3]] = complete(imp,3)
lista_datasets[[4]] = complete(imp,4)
lista_datasets[[5]] = complete(imp,5)
for (k in 1:5) {
lista_datasets[[k]]$rel_and_science_uptow7 [lista_datasets[[k]]$rel_and_science_uptow7 > 1] = 1
lista_datasets[[k]]$rel_and_science_uptow7[lista_datasets[[k]]$rel_and_science_uptow7 < 0] = 0
lista_datasets[[k]]$dogood_both_uptow7[lista_datasets[[k]]$dogood_both_uptow7 > 1] = 1
lista_datasets[[k]]$dogood_both_uptow7 [lista_datasets[[k]]$dogood_both_uptow7 < 0] = 0
lista_datasets[[k]]$Thisworld_both_uptow7[lista_datasets[[k]]$Thisworld_both_uptow7 > 1] = 1
lista_datasets[[k]]$Thisworld_both_uptow7 [lista_datasets[[k]]$Thisworld_both_uptow7 < 0] = 0
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 > 1] = 1
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 < 0] = 0
}
lista_datasets[[k]]$rel_and_science_uptow7 [lista_datasets[[k]]$rel_and_science_uptow7 > 1]
lista_datasets[[k]]
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 == 1)
# Imputación
no.imp = dataset_relig_tol
imp <- mice(no.imp, method = "norm.nob", m = 5) # Impute data
lista_datasets = list()
length(lista_datasets) = 5
lista_datasets[[1]] = complete(imp,1)
lista_datasets[[2]] = complete(imp,2)
lista_datasets[[3]] = complete(imp,3)
lista_datasets[[4]] = complete(imp,4)
lista_datasets[[5]] = complete(imp,5)
for (k in 1:5) {
k = 1
lista_datasets[[k]]$rel_and_science_uptow7 [lista_datasets[[k]]$rel_and_science_uptow7 > 1] = 1
lista_datasets[[k]]$rel_and_science_uptow7[lista_datasets[[k]]$rel_and_science_uptow7 < 0] = 0
lista_datasets[[k]]$dogood_both_uptow7[lista_datasets[[k]]$dogood_both_uptow7 > 1] = 1
lista_datasets[[k]]$dogood_both_uptow7 [lista_datasets[[k]]$dogood_both_uptow7 < 0] = 0
lista_datasets[[k]]$Thisworld_both_uptow7[lista_datasets[[k]]$Thisworld_both_uptow7 > 1] = 1
lista_datasets[[k]]$Thisworld_both_uptow7 [lista_datasets[[k]]$Thisworld_both_uptow7 < 0] = 0
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 > 1] = 1
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 < 0] = 0
}
k = 1
lista_datasets[[k]]$rel_and_science_uptow7
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 == 1)
dataset_relig_tol$rel_and_science_uptow7
# Imputación
no.imp = dataset_relig_tol
imp <- mice(no.imp, method = "norm.nob", m = 5) # Impute data
imp <- mice(no.imp, method = "norm.nob", m = 5) # Impute data
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 == 1)
# Imputación
no.imp = dataset_relig_tol
var = c("id", "ccps", "Relig_Tol_uptow7",
"log_GDP", "globaliz", "coalp_cap",  "dmcry",  "inst",
"WB_EUCA", "WB_LAAC", "WB_MEANA", "WB_SAsia",
"WB_SSAfrica", "WB_EAP")
# Stochastic regression imputation
no.imp = no.imp[c(var, "Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7")]
imp <- mice(no.imp, method = "norm.nob", m = 5)
lista_datasets = list()
length(lista_datasets) = 5
lista_datasets[[1]] = complete(imp,1)
lista_datasets[[2]] = complete(imp,2)
lista_datasets[[3]] = complete(imp,3)
lista_datasets[[4]] = complete(imp,4)
lista_datasets[[5]] = complete(imp,5)
for (k in 1:5) {
k = 1
lista_datasets[[k]]$rel_and_science_uptow7 [lista_datasets[[k]]$rel_and_science_uptow7 > 1] = 1
lista_datasets[[k]]$rel_and_science_uptow7[lista_datasets[[k]]$rel_and_science_uptow7 < 0] = 0
lista_datasets[[k]]$dogood_both_uptow7[lista_datasets[[k]]$dogood_both_uptow7 > 1] = 1
lista_datasets[[k]]$dogood_both_uptow7 [lista_datasets[[k]]$dogood_both_uptow7 < 0] = 0
lista_datasets[[k]]$Thisworld_both_uptow7[lista_datasets[[k]]$Thisworld_both_uptow7 > 1] = 1
lista_datasets[[k]]$Thisworld_both_uptow7 [lista_datasets[[k]]$Thisworld_both_uptow7 < 0] = 0
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 > 1] = 1
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 < 0] = 0
}
lista_datasets = list()
length(lista_datasets) = 5
lista_datasets[[1]] = complete(imp,1)
lista_datasets[[2]] = complete(imp,2)
lista_datasets[[3]] = complete(imp,3)
lista_datasets[[4]] = complete(imp,4)
lista_datasets[[5]] = complete(imp,5)
for (k in 1:5) {
lista_datasets[[k]]$rel_and_science_uptow7 [lista_datasets[[k]]$rel_and_science_uptow7 > 1] = 1
lista_datasets[[k]]$rel_and_science_uptow7[lista_datasets[[k]]$rel_and_science_uptow7 < 0] = 0
lista_datasets[[k]]$dogood_both_uptow7[lista_datasets[[k]]$dogood_both_uptow7 > 1] = 1
lista_datasets[[k]]$dogood_both_uptow7 [lista_datasets[[k]]$dogood_both_uptow7 < 0] = 0
lista_datasets[[k]]$Thisworld_both_uptow7[lista_datasets[[k]]$Thisworld_both_uptow7 > 1] = 1
lista_datasets[[k]]$Thisworld_both_uptow7 [lista_datasets[[k]]$Thisworld_both_uptow7 < 0] = 0
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 > 1] = 1
lista_datasets[[k]]$many_relig_uptow7 [lista_datasets[[k]]$many_relig_uptow7 < 0] = 0
}
for (im in 1:5) {
lista_datasets[[im]]$imp=im
}
WVS_Trust_CCPS = rbind(lista_datasets[[1]],
lista_datasets[[2]],
lista_datasets[[3]],
lista_datasets[[4]],
lista_datasets[[5]])
WVS_Trust_CCPS = WVS_Trust_CCPS [c("id", "rel_and_science_uptow7", "dogood_both_uptow7",
"Thisworld_both_uptow7",	"many_relig_uptow7", "imp")]
no.imp_1 = no.imp
no.imp_1$imp = rep(0, nrow(no.imp_1))
no.imp_1 = no.imp_1[c("id", "rel_and_science_uptow7", "dogood_both_uptow7",
"Thisworld_both_uptow7",	"many_relig_uptow7", "imp")]
no.imp_1 = no.imp_1[complete.cases(no.imp_1),]
Imputaciónfinal = rbind(WVS_Trust_CCPS, no.imp_1)
Imputaciónfinal.melt = melt(Imputaciónfinal, id.vars = c("id", "imp"))
Imputaciónfinal.melt$imp = as.numeric(Imputaciónfinal.melt$imp)
Imputaciónfinal.melt = Imputaciónfinal.melt[order(Imputaciónfinal.melt$imp),]
ggplot(data=Imputaciónfinal.melt, aes(x=imp, y=value, group=imp))+ geom_boxplot() + facet_grid(variable ~ .)
WVS_Trust_CCPS
View(WVS_Trust_CCPS)
imp1 = lista_datasets[[1]]
imp1
length(levels(as.factor(imp1$id)))
length(levels(as.factor(no.imp$id)))
no.imp_1$imp = rep(0, nrow(no.imp_1))
no.imp_1 = no.imp_1[c("id", "rel_and_science_uptow7", "dogood_both_uptow7",
"Thisworld_both_uptow7",	"many_relig_uptow7", "imp")]
no.imp_1 = no.imp_1[complete.cases(no.imp_1),]
Imputaciónfinal = rbind(WVS_Trust_CCPS, no.imp_1)
Imputaciónfinal.melt = melt(Imputaciónfinal, id.vars = c("id", "imp"))
Imputaciónfinal.melt$imp = as.numeric(Imputaciónfinal.melt$imp)
Imputaciónfinal.melt = Imputaciónfinal.melt[order(Imputaciónfinal.melt$imp),]
Vo
View(Imputaciónfinal.melt)
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 == 1)
# Imputación
no.imp = dataset_relig_tol
View(no.imp)
# Definir directorio de trabajo
setwd("C:/Users/Portatil/Desktop/Economia_y_Religion/Version_2")
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
View(dataset_relig_tol)
dataset_relig_tol$_mi_m
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
dataset_relig_tol$_mi_m
dataset_relig_tol$´_mi_m´
dataset_relig_tol["_mi_m"]
dataset_relig_tol["_mi_m"] %>% as.vector()
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
)
dataset_relig_tol$sam_uptow7
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 != 0)
dataset_relig_tol$sam_uptow7
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
)
dataset_relig_tol$sam_uptow7
# Preparar input
dataset_relig_tol <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx") %>%
filter(`_mi_m` == 0) %>%
mutate(
id = row_number(),
sam_uptow6 = if_else(is.na(Relig_Tol_uptow6), 0, sam_uptow6),
sam_uptow7 = if_else(is.na(Relig_Tol_uptow7), 0, sam_uptow7),
sam_onlyw6 = if_else(is.na(Relig_Tol_onlyw6), 0, sam_onlyw6),
sam_onlyw7 = if_else(is.na(Relig_Tol_onlyw7), 0, sam_onlyw7)
) %>%
filter(sam_uptow7 == 1 | is.na(sam_uptow7))
View(dataset_relig_tol)
# Imputación
no.imp = dataset_relig_tol
var = c("id", "ccps", "Relig_Tol_uptow7",
"log_GDP", "globaliz", "coalp_cap",  "dmcry",  "inst",
"WB_EUCA", "WB_LAAC", "WB_MEANA", "WB_SAsia",
"WB_SSAfrica", "WB_EAP")
# Stochastic regression imputation
no.imp = no.imp[c(var, "Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7")]
View(no.imp)
var = c("id", "country", "ccps", "Relig_Tol_uptow7",
"log_GDP", "globaliz", "coalp_cap",  "dmcry",  "inst",
"WB_EUCA", "WB_LAAC", "WB_MEANA", "WB_SAsia",
"WB_SSAfrica", "WB_EAP")
# Stochastic regression imputation
no.imp = no.imp[c(var, "Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7")]
# Imputación
no.imp = dataset_relig_tol
var = c("id", "country", "ccps", "Relig_Tol_uptow7",
"log_GDP", "globaliz", "coalp_cap",  "dmcry",  "inst",
"WB_EUCA", "WB_LAAC", "WB_MEANA", "WB_SAsia",
"WB_SSAfrica", "WB_EAP")
# Stochastic regression imputation
no.imp = no.imp[c(var, "Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7")]
View(no.imp)
new_dataset
n0_dataset <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
new_dataset
# Dos opciones:
# Opción 1: loadings como ponderaciones
w_mean <- n0_dataset %>% select(c("Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7"))
n0_dataset$Thisworld_both_uptow7
# Dos opciones:
# Opción 1: loadings como ponderaciones
w_mean <- n0_dataset %>% select(c("Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7"))
# Dos opciones:
# Opción 1: loadings como ponderaciones
w_mean <- n0_dataset %>% dplyr::select(c("Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7"))
w_mean
# Dos opciones:
# Opción 1: loadings como ponderaciones
w_mean <- n0_dataset %>% dplyr::select(c("Thisworld_both_uptow7", "dogood_both_uptow7",
"rel_and_science_uptow7", "many_relig_uptow7",
"Relig_Tol_uptow7"))
# Análisis de Componentes Principales
pca <- prcomp(dataset[index_vars], scale = TRUE, center = TRUE)
summary(pca)
# Eigen values
eig.val = get_eigenvalue(pca)
# New Dataset
elbow = 1
new_pca = prcomp(dataset[index_vars], scale = TRUE,
center = TRUE, rank = elbow)
# Multi-Class -> Transforming The Labels
new_dataset =  predict(new_pca, dataset[index_vars])
new_dataset = as.data.frame(new_dataset)
new_dataset$country = dataset$country
# Análisis de Componentes Principales
pca <- prcomp(dataset[index_vars], scale = TRUE, center = TRUE)
pca
pca$rotation
new_pca$rotation
new_pca$rotation[1]
sum(new_pca$rotation)
w_mean <- w_mean %>% mutate(Weighted_RT_uptow7 = ((Thisworld_both_uptow7*new_pca$rotation[3])
+ (dogood_both_uptow7*new_pca$rotation[2]) +
(rel_and_science_uptow7*new_pca$rotation[1]) +
(many_relig_uptow7*new_pca$rotation[4]))/ sum(new_pca$rotation))
View(w_mean)
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- (new_dataset$PC1 - min(new_dataset$PC1)) /
(max(new_dataset$PC1) - min(new_dataset$PC1))
new_dataset$W_RTI_normalized
new_dataset
# Agregar PC1 normalizado
final_dataset = w_mean %>% left_join(new_dataset, by = "country")
# Base de datos original
n0_dataset <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
### Dos opciones:
# Opción 1: loadings como ponderaciones
# Ponderadores
new_pca$rotation
w_mean <- n0_dataset %>% mutate(Weighted_RT_uptow7 = ((Thisworld_both_uptow7*new_pca$rotation[3])
+ (dogood_both_uptow7*new_pca$rotation[2]) +
(rel_and_science_uptow7*new_pca$rotation[1]) +
(many_relig_uptow7*new_pca$rotation[4]))/ sum(new_pca$rotation))
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- (new_dataset$PC1 - min(new_dataset$PC1)) /
(max(new_dataset$PC1) - min(new_dataset$PC1))
# Agregar PC1 normalizado
final_dataset = w_mean %>% left_join(new_dataset, by = "country")
View(final_dataset)
getwd()
n0_dataset <- read_excel("STATA_Weighted_Relig_Tolerance_Climate (Regiones).xlsx")
writexl::write_xlsx(final_dataset, "STATA_Weighted_Relig_Tolerance_Climate (Regiones).xlsx")
# Base de datos original
n0_dataset <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
### Dos opciones:
# Opción 1: loadings como ponderaciones
# Ponderadores
new_pca$rotation
w_mean <- n0_dataset %>% mutate(Weighted_RT_uptow7 = ((Thisworld_both_uptow7*new_pca$rotation[3])
+ (dogood_both_uptow7*new_pca$rotation[2]) +
(rel_and_science_uptow7*new_pca$rotation[1]) +
(many_relig_uptow7*new_pca$rotation[4]))/ sum(new_pca$rotation))
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- (new_dataset$PC1 - min(new_dataset$PC1)) /
(max(new_dataset$PC1) - min(new_dataset$PC1))
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- scale(new_dataset$PC1)
new_dataset$W_RTI_normalized
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- (new_dataset$PC1 - min(new_dataset$PC1)) /
(max(new_dataset$PC1) - min(new_dataset$PC1))
which(final_dataset$PC1 == max(final_dataset$PC1))
max(final_dataset$PC1)
which(final_dataset$PC1 == max(final_dataset$PC1, na.rm = T))
final_dataset[which(final_dataset$PC1 == max(final_dataset$PC1, na.rm = T)),]
final_dataset$country[which(final_dataset$PC1 == max(final_dataset$PC1, na.rm = T))]
final_dataset$country[which(final_dataset$W_RTI_normalized == max(final_dataset$W_RTI_normalized, na.rm = T))]
final_dataset$country[which(final_dataset$W_RTI_normalized == max(final_dataset$Weighted_RT_uptow7, na.rm = T))]
final_dataset$country[which(final_dataset$Weighted_RT_uptow7 == max(final_dataset$Weighted_RT_uptow7, na.rm = T))]
final_dataset$country[which(final_dataset$Relig_Tol_uptow7 == max(final_dataset$Relig_Tol_uptow7, na.rm = T))]
final_dataset$country[which(final_dataset$W_RTI_normalized == max(final_dataset$Weighted_RT_uptow7, na.rm = T))]
final_dataset$country[which(final_dataset$W_RTI_normalized == max(final_dataset$Weighted_RT_uptow7, na.rm = T))]
# Multi-Class -> Transforming The Labels
new_dataset =  predict(new_pca, dataset[index_vars])
new_dataset
w_mean <- n0_dataset %>% mutate(Weighted_RT_uptow7 = ((Thisworld_both_uptow7*new_pca$rotation[3])
+ (dogood_both_uptow7*new_pca$rotation[2]) +
(rel_and_science_uptow7*new_pca$rotation[1]) +
(many_relig_uptow7*new_pca$rotation[4]))/ (1))
test = new_dataset %>% left_join(w_mean, by = "country")
new_dataset
# Multi-Class -> Transforming The Labels
new_dataset =  predict(new_pca, dataset[index_vars])
new_dataset = as.data.frame(new_dataset)
new_dataset$country = dataset$country
test = new_dataset %>% left_join(w_mean, by = "country")
test
View(test)
test = w_mean %>% left_join(new_dataset, by = "country")
##-------------------------------##
## Principal Components Analysis ##
##-------------------------------##
##------------##
## Input data ##-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##------------##
# Directorio de trabajo
setwd("C:/Users/Portatil/Desktop/Economia_y_Religion/")
# Conjuntos de datos
dataset_paper <- readxl::read_excel("Version_2/Data/dataset_country_Tableau.xlsx")
# Selección de variables
index_vars = c( "rel_and_science_uptow7","dogood_both_uptow7",
"Thisworld_both_uptow7",	"many_relig_uptow7")
##-------------------------##
## PCA Loadings and Scores ##-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##-------------------------##
# Análisis de Componentes Principales
pca <- prcomp(dataset[index_vars], scale = TRUE, center = TRUE)
summary(pca)
# Eigen values
eig.val = get_eigenvalue(pca)
# Screeplot
pve <- 100*pca$sdev^2/sum(pca$sdev^2)
png("Output/PCA/PVE_PCA.png")
plot(pve, type = "o",
ylab = "Proportion of variance explained",
xlab = "Principal Component",
col = "black")
dev.off()
png("Output/PCA/CPVE_PCA.png")
plot(cumsum(pve), type = "o",
ylab = "Cumulative proportion of variance explained",
xlab = "Principal Component",
col = "black")
dev.off()
setEPS()
postscript("Output/PCA/PVE_PCA.eps")
plot(pve, type = "o",
ylab = "Proportion of variance explained",
xlab = "Principal Component",
col = "black")
dev.off()
setEPS()
postscript("Output/PCA/CPVE_PCA.eps")
plot(cumsum(pve), type = "o",
ylab = "Cumulative proportion of variance explained",
xlab = "Principal Component",
col = "black")
dev.off()
# Explaining first two PCA
png("Output/PCA/Biplot_PCA.png")
fviz_pca_biplot(pca, label = "var",
col.ind = "gray",
col.var = "contrib",
repel = TRUE, select.var = list(contrib = 10)) + scale_colour_gradient2(name = "Contribution")
dev.off()
setEPS()
postscript("Output/PCA/Biplot_PCA.eps")
fviz_pca_biplot(pca, label = "var",
col.ind = "gray",
col.var = "contrib",
repel = TRUE, select.var = list(contrib = 10)) + scale_colour_gradient2(name = "Contribution")
dev.off()
# New Dataset
elbow = 1
new_pca = prcomp(dataset[index_vars], scale = TRUE,
center = TRUE, rank = elbow)
# Multi-Class -> Transforming The Labels
new_dataset =  predict(new_pca, dataset[index_vars])
new_dataset = as.data.frame(new_dataset)
new_dataset$country = dataset$country
writexl::write_xlsx(new_dataset,
"Output/PCA/PCA_Index_Output.xlsx")
##--------------##
## New Dataset  ##-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##--------------##
# Base de datos original
n0_dataset <- read_excel("STATA_Relig_Tolerance_Climate (Regiones).xlsx")
### Dos opciones:
# Opción 1: loadings como ponderaciones
# Ponderadores
new_pca$rotation
w_mean <- n0_dataset %>% mutate(Weighted_RT_uptow7 = ((Thisworld_both_uptow7*new_pca$rotation[3])
+ (dogood_both_uptow7*new_pca$rotation[2]) +
(rel_and_science_uptow7*new_pca$rotation[1]) +
(many_relig_uptow7*new_pca$rotation[4]))/ sum(new_pca$rotation))
### Opción 2: PC1 score normalizado
new_dataset$W_RTI_normalized <- (new_dataset$PC1 - min(new_dataset$PC1)) /
(max(new_dataset$PC1) - min(new_dataset$PC1))
# Agregar PC1 normalizado
final_dataset = w_mean %>% left_join(new_dataset, by = "country")
writexl::write_xlsx(final_dataset, "STATA_Weighted_Relig_Tolerance_Climate (Regiones).xlsx")
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 1)
# add our PCA scores as an index
df$index <- PCA_results$scores
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# Example data
library(psych)
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 1)
# add our PCA scores as an index
df$index <- PCA_results$scores
df
View(df)
# Load the psych package, you could also use princomp in the stats package
library(psych)
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 1)
# add our PCA scores as an index
df$index <- PCA_results$scores
df
View(df)
PCA_results
